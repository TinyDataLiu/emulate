》运行时数据区
    方法区（永久代）
    ->线程共享
    ->存储以被虚拟机加载的类信息，常量，静态变量，即时编译后的代码等数据。
    ->异常：方法区无法满足内存分配需求的时候将抛出OutOfMemoryError异常
        运行时常量池：

    虚拟机栈：为虚拟机执行Java方法服务
    ->线程独享，描述方法执行的内存模型。每个方法执行都会创建一个栈帧。用于存储局部变量表，操作数帧，动态链接，方法出口等信息。
    每一个方法调用到执行完毕， 都对应一个栈帧的入栈到出栈
        局部变量表-> 存储编译期可知的基本数据类型，对象的引用，和returnAddress类型（另一条字节码指令地址）。 内存空间在编译时就已经确定。方法运行不会改变局部变量表的大小。
        异常说明：
            StackOverflowError:线程请求的栈深度，大于虚拟机所允许的栈深度。
            OutOfMemoryError:虚拟栈动态扩展时，无法申请到足够的内存。

    本地方法栈：为虚拟机执行本地方法服务。
        和虚拟栈基本一致。

    堆
    ->虚拟机管理的内存中最大的一块。
    ->线程共享。
    ->虚拟机启动时创建。
    ->存放对象数据。
    ->对象实例以及数组都会分配在堆上（栈上分配，标量替换 --对象可能不会进入堆的可能）。
    ->GC主要的作用区域
    ->细分
        。新生代：
        。老年代
    ->异常：当堆中没有足够的内存完成实例分配，且无法再扩展时 将跑出OutOfMemoryError异常。

    程序计数器
    ->各个线程独享，当前线程所执行的字节码行号的指示器。这里不会存在（唯一一处）OutOfMemoryError错误

》直接内存：不是运行时数据区的内存也不是虚拟机规范的内存。
    NIO 技术的体现：DirectByteBuffer 对直接内存的引用。
    也会跑出OutOfMemoryError异常。





