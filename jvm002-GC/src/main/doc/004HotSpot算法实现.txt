
可达性分析：对象存活分析
》枚举根节点
    -> GC-Root的选取：全局性的引用（常量，类静态属性）。执行上下文中（栈帧中的本地变量表中）。

    问题： 线程中断-> stop the word!
    分析过程需要暂停所有线程，来确保后续的引用问题（也就是对象是否存活） 防止引用关系变更。
    OopMap : 准确定位GC Roots 在程序编译的时候就记录下来引用关系。

》安全点：OopMap->就是那个安全点， 记录的特定位置。
    CG:中断方式
    抢先式中断：发生GC时，先提前中断所有线程。如果发现线程不在安全点就恢复该线程，到安全点停下。
    主动式中断：设置一个标志，各个线程主动轮询这个标志，当发现标志位真的时候，线程就主动中断。

》安全区域：在一段代码片段中， 不会有对象引用关系的变化， 我们把这块区域叫做安全区域。
    主要解决，程序不在运行的时候， GC 可以忽略在安全区域的指令、代码片段， 因为这里不会影响引用关系。
    当线程离开安全区域时候， 会先检查是否枚举过跟节点， 如果枚举过，则直接离开，否则需要等待GC恢复，安全区域可执行信号。