》标记-清除【Mark-Sweep】
    标记->
    清除->
    缺点：效率不高，产生大量不连续的内存碎片，碎片过多会导致后续大对象的分配空间不足，而导致多余的GC 操作。

》复制算法【Copying】  新生代
    将可用内存分成大小相等的两块，每次只是用一块。当一块满了以后就将存活的对象复制到另一块，然后清除前面的一块。
    提高了效率，也不用考虑内存碎片的问题
    缺点:
    1.带价太高，内存只有原来的一半。
    2.如果存活对象太多，将会有较多的复制过程，效率也会变低。
    新生代算法就是用的复制回收算法。但是新生代空间分配是8：1：1 。如果回收后的对象大于10% 则由老年代进行分配担保，剩余存活对象将直接进入老年代。

》标记-整理【Mark-Compact】 老年代
    标记过程和标记-清除算法一样， 将存活对象放置到一端，然后清理掉端边以外的内存空间。

》分代回收算法
    新生代：复制回收
    老年代：标记-清理，标记-整理


