》命令
    jps:显示所有的HotSpot虚拟机进程。:虚拟机进程状态工具。
        jsp [options][hostid] jps 可以通过RMI 协议，查询协议开启了RMI服务的远程虚拟机进程状态，hostid 为RMI注册表中注册的主机名。
        -q:输出LVMID 省略主类。
        -m:输出虚拟机进程启动时传递给主类main()函数的参数。
        -l:输出主类全名，如果是jar包则输出jar路径。
        -v:输出虚拟机启动线程时的参数。


    jstat:用于收集HotSpot虚拟机各方面的运行数据。：虚拟机统计信息监视工具。
        jstat[option vmid [interval[s][ms] [count]]]
        如果是本地虚拟机vmid 合lvmid 一致。
        如果是远程虚拟机进程，那vmid 格式为
        [protoclo:][//] lvmid [@hostname[:port]/servername]
        interval:查询间隔
        count：查询次数
        如果省略这个参数，说明只查询一次。

        jstat -gc 9000 250 20  查询lvmid 为9000 的垃圾收集 250 号为一次轮询，查询20次

        option:分三类，类装载，垃圾收集，运行时编译情况。
            -class:类装载，卸载总空间以及类装载需要时间。
            -gc：监视Java堆状况，包括Eden 区，两个survior区，老年代，永久代容量等，已用空间，GC合计时间等。
            -gccapacity:监视内容与-gc基本相同，但输出主要关注Java堆各个区域使用到的最大，最小空间。
            -gcutil:监视内容与-gc基本相同，但主要关注，使用空间占总空间的比例。
            -gccause:和-gcutil 基本一致，但是会输出上一次gc的原因。
            -gcnew：监视新生代gc
            -gcnewcapacity:和-gcnew基本一致，输出主要关注使用最大，最小空间。
            -gcold:监视老年代gc
            -gcoldcapacity:输出和-gcold一致，主要使用关注使用最大，最小空间。
            -gcpermcapacity:输出永久代使用最大，最小空间。
            -compiler:输出JIT编译器编译过的方法，耗时等信息。
            -printcompilation:输出已经被JIT编译的方法。

    jinfo:显示虚拟机配置信息。（实时的查看和调整虚拟机参数）
        jinfo [option] pid
            jinfo -flag [+|-] name :查看虚拟机参数
            jinfo -flag name=value :修改运行时可写参数

    jmap:生成虚拟机内存转储快照（heapdump 文件）。
        jmap [option] vmid
            参数：
            -dump:生成java堆转储快照，格式为:-dump:[live,]format=b,file=<filename>,其中live 子参数说明是否打印出存活的对象。
            -finalizerinfo:显示在F-Queue 中等待Finalizer 线程执行finalize 方法的对象。只在Linux/Solaris 平台下生效.
            -heap:显示Java堆详细信息。如使用哪种回收器，参数配置，分代状况等 只在Linux/Solaris 生效
            -histo:显示堆中对象统计信息，包括类，实例数量，合计容量
            -permstat:以ClassLoader 为入口，显示永久代内存状态，只在Linux/Solaris 生效
            -F:当-dump 选项没有响应的时候可以使用-F选项强制生成dump 快照。只在Linux/Solaris 平台生效。


    jhat:用于分析heapdump文件，它会建立一个http/html服务器，让用户可以再浏览器上分析结果。
        $ jhat app-server.bin  ：文件来自于：jmap -dump:format=b,file=app-server.bin 17550

        Reading from app-server.bin...
        Dump file created Tue Sep 18 13:10:13 CST 2018
        Snapshot read, resolving...
        Resolving 1713297 objects...
        Chasing references, expect 342 dots......................................................................................................................................................................................................................................................................................................................................................
        Eliminating duplicate references......................................................................................................................................................................................................................................................................................................................................................
        Snapshot resolved.
        Started HTTP server on port 7000
        Server is ready.

        进入localhost:7000 可以查看分析结果。

    jstack:显示当前虚拟机的线程快照（threaddump|javacore）。
        jstack [option] vmid

        -F:强制输出。正常输出无响应使用此命令。
        -l:除堆栈外，显示关于锁的附加信息。
        -m:如果调用了，本地方法，将显示C/C++的堆栈信息。













































